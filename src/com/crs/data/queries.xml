<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Employee">

	<resultMap id="resultEmployee" type="com.crs.model.EmployeeForm">
		<result property="employeeID" column="employee_id" />
		<result property="emailID" column="email" />
		<result property="password" column="password" />
		<result property="salt" column="salt" />
		<result property="firstName" column="first_name" />
		<result property="lastName" column="last_name" />
		<result property="securityQn" column="sec_question" />
		<result property="securityAns" column="sec_answer" />
		<result property="phoneNo" column="phone" />
		<result property="notifyType" column="notify_type" />
		<result property="address" column="address" />
		<result property="dateJoined" column="date_joined" />
		<result property="points" column="points" />
	</resultMap>

	<resultMap type="com.crs.model.CarPoolForm" id="resultCarpool">
		<result property="carpoolID" column="carpool_id" />
		<result property="dateCreated" column="date_created" />
		<result property="atWork" column="at_work" />
	</resultMap>
	
	<resultMap id="resultCarpoolMember" type="com.crs.model.CarPoolMemberForm">
	    <result property="employeeID" column="employee_id"/>
	    <result property="carpoolID" column="carpool_id"/>
	    <result property="dateJoined" column="date_joined"/>
	    <result property="isDriver" column="is_driver"/>
	    <result property="isPickUp" column="pick_up"/>
	    <result property="isTemporary" column="is_temporary"/>
	 	<collection property="employeeList" column="employee_id" javaType="ArrayList"
	 	ofType="com.crs.model.EmployeeForm" resultMap="resultEmployee"/>
     </resultMap>

	<select id="getRecordWithEmail" parameterType="Employee" resultMap="resultEmployee">
		SELECT * FROM Employee WHERE email = #{emailID} LIMIT 1
	</select>

	<select id="getRecordWithEmpID" parameterType="int" resultMap="resultEmployee">
		SELECT * FROM Employee WHERE employee_id = #{empID}
	</select>
	
	<select id="getRecord" parameterType="Employee" resultMap="resultEmployee">
		SELECT * FROM Employee WHERE employee_id = #{employeeID}
	</select>

	<insert id="insertRecord" parameterType="com.crs.model.EmployeeForm" useGeneratedKeys="true"
		keyProperty="employeeID">
		INSERT INTO employee 
		(EMAIL,PASSWORD, SALT, FIRST_NAME,LAST_NAME, SEC_QUESTION, SEC_ANSWER, PHONE, NOTIFY_TYPE, ADDRESS)
		VALUES
		(#{emailID},#{password},#{salt},#{firstName},#{lastName},#{securityQn},#{securityAns},#{phoneNo},#{notifyType},#{address});
	</insert>

	<insert id="createNewMember" parameterType="com.crs.model.CarPoolMemberForm">
		INSERT INTO CARPOOLMEMBER (DATE_JOINED, IS_DRIVER, PICK_UP, IS_TEMPORARY,EMPLOYEE_ID, CARPOOL_ID)
		VALUES (#{dateJoined}, #{isDriver}, #{isPickUp}, #{isTemporary},#{employeeID}, #{carpoolID});
	</insert>

	<insert id="createNewCarPoolGroup" useGeneratedKeys="true" keyProperty="carpoolID">
		INSERT INTO CARPOOL (AT_WORK, DATE_CREATED) VALUES (1, NOW());
	</insert>
	
	<update id="updatePointsForOptingOut" parameterType="int">
		UPDATE EMPLOYEE SET POINTS = POINTS - 3 WHERE EMPLOYEE_ID = #{empID}
	</update>
	
	<update id="modifyUserDetails" parameterType="com.crs.model.CarPoolMemberForm">
		UPDATE EMPLOYEE 
		SET  password = #{password}, sec_question = #{securityQn}, sec_answer = #{securityAns}, phone = #{phoneNo}, notify_type = 0, address = #{address}
		WHERE EMPLOYEE_ID = #{employeeID}
	</update>
	
	<update id="updatePointsForDrive" parameterType="int">
		UPDATE EMPLOYEE SET POINTS = POINTS + 2 WHERE EMPLOYEE_ID = #{empID}
	</update>

	<update id="updatePointsForCancelPickUp" parameterType="int">
		UPDATE EMPLOYEE SET POINTS = POINTS - 2 WHERE EMPLOYEE_ID = #{employeeID}
	</update>
	
	<update id="updatePointsForEmergencyUsage" parameterType="int">
		UPDATE EMPLOYEE SET POINTS = POINTS - 2 WHERE EMPLOYEE_ID = #{employeeID}
	</update>
	
	<delete id="removeMember" parameterType="int">
		DELETE FROM EMPLOYEE WHERE EMPLOYEE_ID = #{empID}
	</delete>

	<select id="getCarPoolGroup" resultMap="resultCarpool">
		SELECT * FROM carpoolmember
		GROUP BY carpool_id
		HAVING COUNT(carpool_id) &lt; 4 LIMIT 1;
	</select>

	<update id="updateRecord" parameterType="Employee">
		UPDATE Employee SET phone = #{phoneNo}, address = #{address}, password =
		#{password} WHERE employee_id = #{employeeID}
	</update>


	<update id="updatePoints" parameterType="Employee">
		UPDATE Employee SET points = #{points} WHERE employee_id = #{employeeID}
	</update>
</mapper>